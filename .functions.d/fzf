cf() {
    d="$(fd . -t d | fzf +m --layout=reverse-list)"
    if [[ ! -z "${d}" ]]; then
        cd "${d}"
    fi
}

crr() {
    fd -u '^.git$' ~/code -t d --prune -x dirname | grep -v '\.terraform' | sort > ~/.local/share/repos
}

cr() {
    if [[ -f ~/.local/share/repos ]] ; then
        repos="$(< ~/.local/share/repos)"
    else
        repos="$(fd -u '^.git$' ~/code -t d --prune -x dirname | grep -v '\.terraform')"
    fi

    # d="$(fzf +m --layout=reverse-list < ~/.local/share/repos)"
    d="$(fzf +m --layout=reverse-list <<< "${repos}")"
    if [[ ! -z "${d}" ]]; then
        cd "${d}"
    fi
}

fzf-source() {
    for cmd in fzf yq ; do
        if ! command -v "${cmd}" > /dev/null ; then
            echo "Error: ${cmd} not found" >&2
            return 1
        fi
    done

    if [[ "${#}" -lt 1 ]]; then
        echo "Error: pass a config file" >&2
        echo "Usage: fzf-source YAML_FILE" >&2
        return 1
    fi

    config="${1}"

    selection="$(yq -r 'keys|.[]' "${config}" | fzf +m --layout=reverse-list)"

    if [[ -z "${selection}" ]] ; then
        return 1
    fi

    s="$(yq -r ".${selection}" "${config}")"

    source <(echo "${s}")
}

fmv() {
    if [[ "${#}" -lt 2 ]]; then
        return
    fi

    if [[ ! -d "${2}" ]]; then
        return
    fi

    mv "${1}" "$(find "${2}" -type d | fzf +m)"
}

tp() {
    tmuxp ls|fzf --layout=reverse-list|xargs -r tmuxp load -y
}

